// COOOLa クラウド型倉庫管理システム - バックエンドビルド設定
// Spring Boot 3.x + Java 17 を使用したRESTful APIサーバーの設定

plugins {
    id 'java'  // Javaプラグイン
    id 'org.springframework.boot' version '3.2.0'  // Spring Bootプラグイン
    id 'io.spring.dependency-management' version '1.1.4'  // Spring依存関係管理
    id 'org.flywaydb.flyway' version '10.8.1'  // データベースマイグレーション
}

// プロジェクト基本情報
group = 'com.cooola'  // グループID
version = '1.0.0'     // バージョン
sourceCompatibility = '17'  // Java 17を使用

// コンパイル設定
configurations {
    compileOnly {
        extendsFrom annotationProcessor  // Lombok用の設定
    }
}

// Mavenリポジトリ設定
repositories {
    mavenCentral()  // Maven Centralリポジトリ
}

dependencies {
    // ========================================
    // Spring Boot Starters - コア機能
    // ========================================
    implementation 'org.springframework.boot:spring-boot-starter-web'        // Webアプリケーション（RESTful API）
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // JPA（データベースアクセス）
    implementation 'org.springframework.boot:spring-boot-starter-security'  // セキュリティ（認証・認可）
    implementation 'org.springframework.boot:spring-boot-starter-validation' // バリデーション
    implementation 'org.springframework.boot:spring-boot-starter-actuator'   // 監視・メトリクス
    
    // ========================================
    // データベース関連
    // ========================================
    implementation 'mysql:mysql-connector-java:8.0.33'  // MySQL接続ドライバー
    implementation 'org.flywaydb:flyway-core'           // データベースマイグレーション
    implementation 'org.flywaydb:flyway-mysql'          // MySQL用Flyway
    
    // ========================================
    // JWT（JSON Web Token）認証
    // ========================================
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'      // JWT API
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'       // JWT実装
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'    // JWT Jackson連携
    
    // ========================================
    // AWS SDK - クラウドサービス連携
    // ========================================
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.261'   // S3（ファイルストレージ）
    implementation 'com.amazonaws:aws-java-sdk-sqs:1.12.261'  // SQS（メッセージキュー）
    
    // ========================================
    // ユーティリティライブラリ
    // ========================================
    implementation 'org.apache.commons:commons-lang3:3.12.0'  // Apache Commons Lang
    implementation 'com.fasterxml.jackson.core:jackson-databind'  // JSON処理
    
    // ========================================
    // バーコード・QRコード生成
    // ========================================
    implementation 'com.google.zxing:core:3.5.2'      // ZXingコアライブラリ
    implementation 'com.google.zxing:javase:3.5.2'    // ZXing Java SE拡張
    
    // ========================================
    // 開発支援ツール
    // ========================================
    compileOnly 'org.projectlombok:lombok'           // Lombok（ボイラープレート削減）
    annotationProcessor 'org.projectlombok:lombok'   // Lombokアノテーション処理
    
    // ========================================
    // テスト関連
    // ========================================
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // Spring Bootテスト
    testImplementation 'org.springframework.security:spring-security-test'  // セキュリティテスト
    testImplementation 'com.h2database:h2'  // インメモリデータベース（テスト用）
}

// テスト設定
tasks.named('test') {
    useJUnitPlatform()  // JUnit 5を使用
}

// ========================================
// Flyway設定 - データベースマイグレーション
// ========================================
flyway {
    url = 'jdbc:mysql://localhost:3306/cooola_db'     // データベースURL
    user = 'cooola_user'                              // データベースユーザー
    password = 'cooola_password'                      // データベースパスワード
    locations = ['classpath:db/migration']            // マイグレーションSQLファイルの場所
} 